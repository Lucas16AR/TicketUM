openapi: 3.0.1
info:
  title: TicketUM API
  description: |-
    Esta es una API de creacion de Tickets para eventos.
  termsOfService: http://swagger.io/terms/
  version: v1
servers:
  - url: http://localhost:8080
    description: TicketUM API
paths:
  /events:
    get:
      tags:
        - events
      summary: This endpoint returns the current available events
      operationId: showEvents
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Event'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
  /events/{code}:
    get:
      tags:
        - events
      summary: This endpoint returns the specific event by an event code
      operationId: showEvent
      parameters:
        - name: code
          in: path
          required: true
          description: The event code
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Event'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
  /guests/create:
    post:
      tags:
        - guests
      summary: This endpoint creates a new guest
      operationId: createGuest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Guest'
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Guest'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
  /events/guests/add:
    put:
      tags:
        - guests
      summary: This endpoint adds a guest to an event
      operationId: addGuest
      parameters:
        - name: eventCode
          in: query
          required: true
          description: The event code
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                eventCode:
                  type: string
                guest:
                  $ref: '#/components/schemas/Guest'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Event'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
  /guests/events/{eventCode}:
    get:
      tags:
        - guests
      summary: This endpoint returns a specific guest by dni and email within an event
      operationId: showGuest
      parameters:
        - name: eventCode
          in: path
          required: true
          description: The event code stored in the guest
          schema:
            type: string
        - name: dni
          in: query
          required: true
          description: The guest dni
          schema:
            type: string
        - name: email
          in: query
          required: true
          description: The guest email
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Guest'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
  
components:
  schemas:
    Guest:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        phone:
          type: string
        dni:
          type: string
        eventCode:
          type: string
    Event:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        date:
          type: string
        location:
          type: string
        attendees:
          type: array
          items:
            $ref: '#/components/schemas/Guest'
    Error:
      type: object
      properties:
        code:
          type: integer
          description: Código de error
        message:
          type: string
          description: Descripción del error
      example:
        code: 400
        message: Bad Request